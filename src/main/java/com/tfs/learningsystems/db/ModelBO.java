package com.tfs.learningsystems.db;

import io.swagger.annotations.ApiModelProperty;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import lombok.Data;
import lombok.EqualsAndHashCode;
import org.thymeleaf.util.StringUtils;

/**
 * The database operation of this object is handled by the BusinessObject. Hopefully, this will help
 * to simplify and unify these operations.
 *
 * The table was named as 'models'. we will rename it to 'model' (without the s )
 */
@Data
@EqualsAndHashCode(callSuper = false)
@Entity
@Table(name = "models")
public class ModelBO extends BusinessObject<ModelBO, String> {

  public static final String DB_PREFIX = "mod";

  public static final String FLD_PROJECT_ID = "projectId";

  public static final String FLD_MODEL_ID = "modelId";

  public static final String FLD_MODEL_VERSION = "version";

  public static final String FLD_CID = "cid";

  public static final String FLD_ID = "id";

  @Id
  @GeneratedValue
  @Column(name = "id")
  @ApiModelProperty(readOnly = true, value = "internal id generated by MWB", example = "12")
  protected Integer id;

  @Column(name = "cid")
  @ApiModelProperty(readOnly = true, value = "internal client id generated for model", hidden = true)
  protected String cid = DbId.EMPTY.toString();

  @Column(name = "dbid")
  @ApiModelProperty(readOnly = true, value = "database id for the model", hidden = true)
  protected String dbid = DbId.EMPTY.toString();      // we will use this to replace the current ID

  @Column(name = "model_id")
  @ApiModelProperty(value = "modelbuilder id", example = "1274374-23124241-412412424")
  protected String modelId;

  @Column(name = "name")
  @ApiModelProperty(required = true, value = "model name", example = "root_intent")
  protected String name;

  @Column(name = "description")
  @ApiModelProperty(value = "model description", example = "Root intent model")
  protected String description;

  @Column(name = "user_id")
  @ApiModelProperty(value = "user id who created the model", example = "ml_user")
  protected String userId;

  @Column(name = "dataset_ids")
  @ApiModelProperty(value = "list of datasets to be used", example = "159")
  protected String datasetIds;

  @Column(name = "config_id")
  @ApiModelProperty(value = "config id to be used for model", example = "1")
  protected Integer configId;

  @Column(name = "speech_config_id")
  @ApiModelProperty(value = "confif id for word classes to be used for speech model", example = "1")
  protected Integer speechConfigId;

  @Column(name = "isUnbundled")
  @ApiModelProperty(value = "whether to generate speech with grxml included or not", example = "true")
  protected Boolean isUnbundled = false;

  @Column(name = "project_id")
  @ApiModelProperty(hidden = true, value = "project id", example = "561")
  protected Integer projectId;

  @Column(name = "created_at")
  @ApiModelProperty(value = "model created time", example = "1551998097406")
  protected Long createdAt;

  @Column(name = "updated_at")
  @ApiModelProperty(value = "last model updated time", example = "1551998097406")
  protected Long updatedAt;

  @Column(name = "version")
  @ApiModelProperty(readOnly = true, value = "version of the model", example = "12")
  protected Integer version = 1;

  @Column(name = "model_type")
  @ApiModelProperty(value = "type of model to be trained", example = "DIGITAL")
  protected String modelType = "DIGITAL";

  @Column(name = "accuracy")
  @ApiModelProperty(value = "accuracy of completed model ", example = "0.55")
  protected String modelAccuracy = null;

  @Column(name = "weightedFScore")
  @ApiModelProperty(value = "average weighted f_score of completed model ", example = "0.85")
  protected String modelWeightedFScore = null;

  @Column(name = "digital_hosted_url")
  @ApiModelProperty(value = "Digital model URL", example = "https://qa.modelbuilder.com/digital")
  protected String digitalHostedUrl = null;

  @Column(name = "speech_model_id")
  @ApiModelProperty(value = "speech model id reference", example = "123")
  protected String speechModelId = null;


  @Column(name = "vectorizer_type")
  @ApiModelProperty(value = "defines vectorizer_type", example = "1")
  protected Integer vectorizer_type = 1 ;


  @Transient
  @ApiModelProperty(value = "model building status", example = "RUNNING")
  protected String status = null;

  @Override
  @ApiModelProperty(readOnly = true, value = "internal db id", hidden = true)
  public String getDbPrefix() {
    return DB_PREFIX;
  }

  public void setDatasetIds(List<String> ids) {
    if (ids == null || ids.isEmpty()) {
      datasetIds = null;
    } else {
      datasetIds = String.join(", ", ids);
    }
  }

  public List<String> getDatasetIds() {
    if (StringUtils.isEmpty(this.datasetIds)) {
      return (new LinkedList<String>());
    }
    //removing empty spaces from string and splitting.
    List<String> datasetIdsList = Arrays.asList(this.datasetIds.replaceAll("\\s+", "").split(","));
    return datasetIdsList;
  }
}
